inboundCall:
  name: Workshop Smart Callback Flow
  description: "Minimal starter to publish successfully"
  division: Home
  defaultLanguage: en-us
  startUpRef: "/inboundCall/tasks/task[Start]"

  # ---- Variables (inputs/working) ----
  variables:
    - stringVariable:
        name: Flow.queueId
        initialValue:
          noValue: true          # pass in the target Queue ID when invoking this flow
        isInput: true
        isOutput: false
    - integerVariable:
        name: Flow.callbackThresholdSeconds
        initialValue:
          lit: 300               # 5 minutes threshold
        isInput: true
        isOutput: false
    - integerVariable:
        name: Task.ewtSeconds
        initialValue:
          lit: 0
        isInput: false
        isOutput: false
    - integerVariable:
        name: Task.ewtMinutes
        initialValue:
          lit: 0
        isInput: false
        isOutput: false
    - stringVariable:
        name: Slot.callbackNumber
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Task.callerNumber
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
  # ---- Global error handling (optional, aligned to your style) ----
  settingsErrorHandling:
    errorHandling:
      exit:
        none: true
    enableAgentEscalation:
      lit: true
    errorEventHandover:
      exp: "MakeCommunication(ToCommunication(ToCommunication(\"Sorry, an error occurred. One moment while I connect you.\")))"
    recognitionFailureEventHandling:
      exit:
        none: true
    agentEscalationHandling:
      exit:
        none: true

  # ---- Tasks ----
  tasks:
    - task:
        name: Start
        refId: Start_1
        actions:
          # Capture ANI into a working variable
          - setVariable:
              name: Capture ANI
              variable: Task.callerNumber
              value:
                exp: Call.ANI

          # Welcome message
          - playAudio:
              name: Welcome
              audio:
                tts: "Welcome to Example Company. What would you like to do today?"

          # (Optional) Voicebot greeting / short intent capture
          # Replace with your actual bot action for inbound call flows (e.g., callBotFlow)
          # If you don't use a bot, you can remove this block safely.
          - callBotFlow:
              name: Voicebot Greeting
              botFlowName:
                lit: "My Inbound Voicebot"   # <-- replace with your actual Bot Flow name
              onError:
                - playAudio:
                    name: Bot Unavailable
                    audio:
                      tts: "Sorry, our assistant is unavailable right now."

          # Get EWT for the target queue via Data Action
          - callData:
              name: Get Estimated Wait Time (seconds)
              timeout:
                lit:
                  minutes: 1
              category:
                GC Data Actions - Your Category:
                  dataAction:
                    Get Queue EWT Seconds:
                      inputs:
                        queueId:
                          exp: Flow.queueId
                      successOutputs:
                        estimatedWaitTimeSeconds:
                          var: Task.ewtSeconds
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        userMessage:
                          noValue: true
              outputs:
                success:
                  actions:
                    - setVariable:
                        name: Compute EWT Minutes
                        variable: Task.ewtMinutes
                        value:
                          exp: "Round(ToNumber(Task.ewtSeconds) / 60.0)"
                    - decision:
                        name: Is Wait > Threshold?
                        condition:
                          exp: "ToNumber(Task.ewtSeconds) > ToNumber(Flow.callbackThresholdSeconds)"
                        branches:
                          - label: OfferCallback
                            when:
                              exp: "true"
                            actions:
                              - gotoTask:
                                  name: Offer Callback
                          - label: TransferNormally
                            when:
                              exp: "false"
                            actions:
                              - gotoTask:
                                  name: Transfer to ACD
                failure:
                  actions:
                    - playAudio:
                        name: EWT Unavailable
                        audio:
                          tts: "We couldn’t estimate wait time right now."
                    - gotoTask:
                        name: Transfer to ACD

    - task:
        name: Offer Callback
        refId: Offer Callback_2
        actions:
          - playAudio:
              name: Announce EWT
              audio:
                tts: "Current estimated wait is about {ToString(Task.ewtMinutes)} minute(s). Would you like a callback instead of waiting?"

          # Collect Yes/No using DTMF (1 = Yes, 2 = No)
          - collectInput:
              name: Callback Choice (1 Yes, 2 No)
              inputData:
                type: dtmf
                maxDigits:
                  lit: 1
                terminateDigits:
                  lit: []
              output:
                var: Task.callbackChoiceDigit
              noInput:
                - playAudio:
                    name: No Input
                    audio:
                      tts: "I didn’t hear anything."
                - repeatInput: true
              noMatch:
                - playAudio:
                    name: No Match
                    audio:
                      tts: "That wasn’t a valid option."
                - repeatInput: true

          - decision:
              name: Branch on Callback Choice
              condition:
                exp: "true"
              branches:
                - label: Yes
                  when:
                    exp: "Task.callbackChoiceDigit == '1'"
                  actions:
                    - gotoTask:
                        name: Collect Callback Number
                - label: No
                  when:
                    exp: "Task.callbackChoiceDigit == '2'"
                  actions:
                    - gotoTask:
                        name: Transfer to ACD
                - label: Fallback
                  when:
                    exp: "true"
                  actions:
                    - gotoTask:
                        name: Offer Callback

    - task:
        name: Collect Callback Number
        refId: Collect Callback Number_3
        actions:
          # Offer using detected ANI or entering a different number
          - collectInput:
              name: Use Detected Number? (1 Use ANI, 2 Enter)
              inputData:
                type: dtmf
                maxDigits:
                  lit: 1
              output:
                var: Task.useAniDigit
              prompt:
                tts: "We detected {Task.callerNumber}. Press 1 to use this number, or 2 to enter a different number."
              noInput:
                - playAudio:
                    name: No Input
                    audio:
                      tts: "I didn’t hear anything."
                - repeatInput: true
              noMatch:
                - playAudio:
                    name: No Match
                    audio:
                      tts: "That wasn’t a valid option."
                - repeatInput: true

          - decision:
              name: ANI or Enter
              condition:
                exp: "true"
              branches:
                - label: UseANI
                  when:
                    exp: "Task.useAniDigit == '1'"
                  actions:
                    - setVariable:
                        name: Set Callback from ANI
                        variable: Slot.callbackNumber
                        value:
                          exp: Task.callerNumber
                    - gotoTask:
                        name: Confirm & Schedule
                - label: EnterNumber
                  when:
                    exp: "Task.useAniDigit == '2'"
                  actions:
                    - collectInput:
                        name: Enter Callback Number (10 digits)
                        inputData:
                          type: phoneNumber
                          maxDigits:
                            lit: 10
                        output:
                          var: Slot.callbackNumber
                        prompt:
                          tts: "Please enter the 10-digit callback number now."
                        noInput:
                          - playAudio:
                              name: No Input
                              audio:
                                tts: "I didn’t hear anything."
                          - repeatInput: true
                        noMatch:
                          - playAudio:
                              name: No Match
                              audio:
                                tts: "That wasn’t a valid phone number."
                          - repeatInput: true
                    - gotoTask:
                        name: Confirm & Schedule
                - label: Fallback
                  when:
                    exp: "true"
                  actions:
                    - gotoTask:
                        name: Collect Callback Number

    - task:
        name: Confirm & Schedule
        refId: Confirm & Schedule_4
        actions:
          - collectInput:
              name: Confirm Number (1 Confirm, 2 Re-enter)
              inputData:
                type: dtmf
                maxDigits:
                  lit: 1
              output:
                var: Task.confirmDigit
              prompt:
                tts: "You entered {Slot.callbackNumber}. Press 1 to confirm, or 2 to re-enter."
              noInput:
                - playAudio:
                    name: No Input
                    audio:
                      tts: "I didn’t hear anything."
                - repeatInput: true
              noMatch:
                - playAudio:
                    name: No Match
                    audio:
                      tts: "That wasn’t a valid option."
                - repeatInput: true

          - decision:
              name: Confirm Branch
              condition:
                exp: "true"
              branches:
                - label: Confirm
                  when:
                    exp: "Task.confirmDigit == '1'"
                  actions:
                    # Create the callback via Data Action (map to your action)
                    - callData:
                        name: Create Callback
                        timeout:
                          lit:
                            minutes: 1
                        category:
                          GC Data Actions - Your Category:
                            dataAction:
                              Create Callback:
                                inputs:
                                  queueId:
                                    exp: Flow.queueId
                                  phoneNumber:
                                    exp: Slot.callbackNumber
                                failureOutputs:
                                  errorCode:
                                    noValue: true
                                  status:
                                    noValue: true
                                  userMessage:
                                    noValue: true
                        outputs:
                          success:
                            actions:
                              - playAudio:
                                  name: Confirm Scheduled
                                  audio:
                                    tts: "Your callback has been scheduled. Goodbye!"
                              - endTask:
                                  name: End
                                  outputPath:
                                    name: default
                          failure:
                            actions:
                              - playAudio:
                                  name: Callback Failed
                                  audio:
                                    tts: "Sorry, I couldn’t schedule the callback. I can connect you to an agent instead."
                              - gotoTask:
                                  name: Transfer to ACD
                - label: Re-enter
                  when:
                    exp: "Task.confirmDigit == '2'"
                  actions:
                    - gotoTask:
                        name: Collect Callback Number
                - label: Fallback
                  when:
                    exp: "true"
                  actions:
                    - gotoTask:
                        name: Confirm & Schedule

    - task:
        name: Transfer to ACD
        refId: Transfer to ACD_5
        actions:
          - playAudio:
              name: Announce Transfer
              audio:
                tts: "Please hold while I connect you to an agent."
          - transferToAcd:
              name: Transfer
              queueId:
                exp: Flow.queueId
              priority:
                lit: 0
              onError:
                - playAudio:
                    name: Transfer Failed
                    audio:
                      tts: "We couldn’t connect your call. Please try again later."
                - endTask:
                    name: End
                    outputPath:
                      name: default